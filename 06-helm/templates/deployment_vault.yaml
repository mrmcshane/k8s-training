apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.vault.name }}
  labels:
{{ .Values.vault.labels }}
spec:
  replicas: {{ .Values.vault.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.vault.name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.vault.name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: "{{ .Chart.Name }}-{{ .Values.vault.name }}"
          image: "{{ .Values.vault.image.name }}:{{ .Values.vault.image.version }}"
          imagePullPolicy: {{ .Values.vault.image.pullPolicy }}
          command: {{ .Values.vault.command }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:          
          - name: VAULT_URL
            value: "http://{{ .Values.vault.name }}:{{ .Values.vault.service.port }}"
          - name: VAULT_TOKEN
            valueFrom:
              secretKeyRef:
                key:  vault-token
                name: {{ .Release.Name }}--secret
          volumeMounts:
          - name: vault-fs
            mountPath: /mnt/vault/file
          - name: config.json
            mountPath: /home/vault/config.json
            subPath: config.json
        volumes:
        - name: vault-fs
          emptyDir: {}
        - name: config.json
          configMap:
            name: cfg-config.json
    


        